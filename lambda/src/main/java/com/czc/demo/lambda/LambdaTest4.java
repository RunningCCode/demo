package com.czc.demo.lambda;

import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * @author chenzhicong
 * @time 2019/3/27 9:51
 * @description
 */
public class LambdaTest4 {
  static List<Student> students;
  static String[] gradeArr = Stream.of("大一", "大二", "大三", "大四").toArray(String[]::new);

  static {
    int[] i = new int[1];
    i[0] = 0;
    Random random = new Random();
    students =
        Stream.generate(
                () -> {
                  Student s = new Student();
                  s.setId(String.valueOf(i[0]));
                  s.setName("student" + i[0]);
                  s.setGrade(gradeArr[random.nextInt(4)]);
                  s.setScore(random.nextDouble() * 100);
                  i[0]++;
                  return s;
                })
            .limit(100)
            .collect(Collectors.toList());
  }
  // -------------------------中间操作-------------------------------
  // 1、过滤90分以上的学生
  // 2、返回学生名称的集合
  // 3、返回90分以上学生名称集合
  // 4、给定字符串列表，abc,ab,ab返回字符串列表中长度小于3的字符串、转换为小写、只保留唯一的
  // 5、过滤得到90分以上的学生，然后按分数从高到低排序，分数一样的，按名称排序
  // 6、分页 将学生列表按照分数排序，返回第3名到第5名
  // 7、调试，获取90分以上学生的名称集合，并输出学生的名称
  // -------------------------中间操作-------------------------------

  // -------------------------终端操作-------------------------------
  // 8、转换字符串数组[“1,2,3,4,5”,”3,4,5,6,7”,”4,5,6,7,8”]为一个集合，其中元素对应数组每个元素中按逗号分隔元素。
  // 9、统计大于90分的学生个数
  // 10、是否所有学生都及格
  // 11、随便找一个不及格的学生
  // 12、逐行打印大于90分的学生
  // 13、获取90分以上的学生数组
  // 14、使用reduce求分数最高的学生
  // 15、使用reduce函数计算学生分数的和
  // 16、输出当前目录下所有普通文件的名字
  // 17、输出10个随机数
  // 18、输出100个递增的奇数
  // -------------------------终端操作-------------------------------

  // -------------------------收集器--------------------------------
  // 19、转换为 学生id和学生对象的Map
  /*public Map<String,Student> fun3(){
      Map
  }*/
  // 20、获取字符串与其长度的Map,"abc","hello","abc",忽略重复元素
  // 21、按年级进行分组
  // 22、统计每个年级的学生个数
  // 23、统计一个单词流中每个单词的个数，按出现顺序排序,"hello","world","abc","hello"
  // 24、每个年级分数最高的一个学生
  // 25、按年级统计学生分数信息
  // 26、对学生按年级分组，得到学生名称列表
  // 27、将学生按年级分组，分组内学生按照分数由高到低进行排序
  // 28、将学生按年级分组，分组后，每个分组只保留不及格的学生(低于60分)
  // 29、将学生按年级分组，分组后，每个分组只保留前两名的学生
  // 30、将学生按照是否及格(大于等于60分)分为两组
  // 31、按是否及格分组后，计算每个分组的平均分
  // 32、按年级对学生分组，分组后，再按照是否及格对学生进行分区
  // -------------------------收集器--------------------------------
}
